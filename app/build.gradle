apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.mvvmdemo"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    androidExtensions {
        experimental = true
    }

    def properties = getConfigProperties()

    // 打包配置信息的地址
    signingConfigs {
        release {
            storeFile file(properties['STORE_FILE'])
            keyAlias properties['KEY_ALIAS']
            keyPassword properties['KEY_PASSWORD']
            storePassword properties['STORE_PASSWORD']
        }
    }

    productFlavors {
        dev {
            buildConfigField 'String', 'HOST', "${properties['HOST_DEV']}"
        }
        uat {
            buildConfigField 'String', 'HOST', "${properties['HOST_UAT']}"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

}

def getConfigProperties() {
    def prop = new Properties()
    def is = project.rootProject.file('config.properties').newDataInputStream()
    prop.load(is)
    return prop
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //jetpack
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-rc03'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.0"

    //adapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.0-beta10'
    //协程
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha01'
    //retrofit + okHttp3
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.1.1'
    //qmui
    implementation 'com.qmuiteam:qmui:2.0.0-alpha02'
    implementation 'com.qmuiteam:arch:2.0.0-alpha02'
    //    implementation "com.qmuiteam:arch-compiler:2.0.0-alpha02" // use annotationProcessor if java
    //屏幕适配
    implementation 'me.jessyan:autosize:1.1.2'
    // logger
    implementation 'com.orhanobut:logger:2.2.0'
    // utils
    implementation 'com.blankj:utilcode:1.19.0'
    //动态权限
    implementation 'pub.devrel:easypermissions:3.0.0'

    // LiveEventBus
    implementation 'com.jeremyliao:live-event-bus-x:1.5.7'

    //Room
    implementation 'android.arch.persistence.room:runtime:2.1.4'
    annotationProcessor 'android.arch.persistence.room:compiler:2.1.4'


}
